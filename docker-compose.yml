services:
    db:
        image: postgres:16-alpine
        container_name: rubbergod-postgres
        deploy:
            restart_policy:
                condition: unless-stopped
                delay: 5s
                window: 20s
        environment:
            POSTGRES_USER: rubbergod
            POSTGRES_DB: rubbergod
            POSTGRES_HOST_AUTH_METHOD: "trust"
        command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/log/", "-c", "log_filename=postgresql.log", "-c", "log_file_mode=0644", "-c", "log_rotation_size=200MB"]
        volumes:
            - ./logs:/var/log:Z
            - postgres_data:/var/lib/postgresql/data/
            - ./database/backup/backup.sql:/docker-entrypoint-initdb.d/backup.sql
        networks:
            - postgres

    bot:
        image: rubbergod-bot
        container_name: rubbergod-bot
        deploy:
            restart_policy:
                condition: unless-stopped
                delay: 5s
                window: 20s
        build:
            context: .
            dockerfile: Dockerfile
            tags:
                - rubbergod-bot
        volumes:
            - .:/rubbergod:Z
            - ssh_config:/root/.ssh
        depends_on:
            - db
        networks:
            - postgres
            - prometheus

volumes:
    postgres_data:
    ssh_config:

networks:
    postgres:
    prometheus:
        external: true
